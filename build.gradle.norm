buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

//plugins {
//    id 'com.github.johnrengelman.shadow' version '4.0.4'
//}
//apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'java'

group = 'com.tfc'
version = ''
archivesBaseName = 'tempdiscordmcchatmod'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: '20201028-1.16.3'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                tempdiscordmcchatmod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                tempdiscordmcchatmod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'tempdiscordmcchatmod', '--all', '--output', file('src/generated/resources/')

            mods {
                tempdiscordmcchatmod {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven {url "http://zoidberg.ukp.informatik.tu-darmstadt.de/artifactory/public-releases/"}
}

configurations {
    extraLibs
    shade
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.16.3-34.1.42'

    //https://github.com/DV8FromTheWorld/JDA
    extraLibs ('net.dv8tion:JDA:4.2.0_214') {
        exclude module: 'opus-java'
    }

    // https://mvnrepository.com/artifact/net.sf.trove4j/trove4j
//    extraLibs group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
//    extraLibs group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'

    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
//    extraLibs group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.10.0-RC1'

//    extraLibs 'com.fasterxml.jackson.core:jackson-databind:2.12.0-rc1'

    // https://mvnrepository.com/artifact/gnu.trove/trove
//    extraLibs group: 'gnu.trove', name: 'trove', version: '3.0.3'

    configurations.shade.extendsFrom(configurations.extraLibs)
    configurations.compile.extendsFrom(configurations.extraLibs)

    // You may put jars on which you depend on in ./libs or you may define them like so..
    // compile "some.group:artifact:version:classifier"
    // compile "some.group:artifact:version"

    // Real examples
    // compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    // compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // The 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    // provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // These dependencies get remapped to your current MCP mappings
    // deobf 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
}

jar.finalizedBy('reobfJar')

jar {
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

//shadowJar {
//    classifier = ''
//    configurations = [project.configurations.shade]
//    relocate 'com.fasterxml', "${project.group}.shadow.com.fasterxml"
//    relocate 'com.iwebpp', "${project.group}.shadow.com.iwebpp"
//    relocate 'com.neovisionaries', "${project.group}.shadow.com.neovisionaries"
//    relocate 'gnu', "${project.group}.shadow.gnu"
//    relocate 'javax', "${project.group}.shadow.javax"
//    exclude 'kotlin'
//    relocate 'net', "${project.group}.shadow.net"
//    relocate 'okhttp3', "${project.group}.shadow.okhttp3"
//    relocate 'okio', "${project.group}.shadow.okio"
//    relocate 'org', "${project.group}.shadow.org"
//}

//reobf {
//    shadowJar { }
//}

//tasks.build.dependsOn reobfShadowJar
//jar.finalizedBy('reobfShadowJar')